version: '3'
services:
  django:
    build:
      context: .
      dockerfile: ./dev/django.Dockerfile
    command: ["./manage.py", "runserver", "0.0.0.0:8000"]
    # Log printing via Rich is enhanced by a TTY
    tty: true
    env_file: ./dev/.env.docker-compose
    volumes:
      - .:/opt/django-project
    ports:
      - 8000:8000
    depends_on:
      - postgres
      - rabbitmq
      - minio

  celery:
    build:
      context: .
      dockerfile: ./dev/django.Dockerfile
    command: [
      "celery",
      "--app", "test_app.celery",
      "worker",
      "--loglevel", "INFO",
      "--without-heartbeat"
    ]
    # Docker Compose does not set the TTY width, which causes Celery errors
    tty: false
    env_file: ./dev/.env.docker-compose
    volumes:
      - .:/opt/django-project
    depends_on:
      - postgres
      - rabbitmq
      - minio

  yarn:
    image: node:latest
    command: ["yarn", "run", "serve", "--port", "8080"]
    working_dir: /opt/client
    environment:
      # Fixes https://github.com/OpenImaging/miqa/issues/298
      # nodeversion >=17 deprecated some OpenSSL algorithms which a dependency is still using
      # https://nodejs.org/en/blog/release/v17.0.0/
      - NODE_OPTIONS=--openssl-legacy-provider
    volumes:
      - ../test-client:/opt/client
    ports:
      - 8080:8080
